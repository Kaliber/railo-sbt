package nl.rhinofly.railosbt

import java.io.File

import lucee.runtime.exp.PageException

import nl.rhinofly.jetty.runner.JettyServerFactoryInterface
import nl.rhinofly.railo.compiler.CompilerInterface
import nl.rhinofly.railo.compiler.Compiler
import nl.rhinofly.railo.compiler.RailoContext
import nl.rhinofly.railo.compiler.{RailoRunner => ActualRailoRunner}

// We need to write a test for this. It's not type checked
object RailoRunner {

  val sourceDirectory:File = $sourceDirectory
  val webXmlFile:File = $webXmlFile
  val compiler:CompilerInterface = $railoCompilerClassName
  val jettyServerFactory:JettyServerFactoryInterface = $jettyServerFactoryClassName
  val railoServletName:String = $railoServletName
  
  def withRailo[T](port: Int)(code: RailoContext => T):T = {
    val jettyServer = jettyServerFactory.newServer(port, sourceDirectory, webXmlFile)
    val runner = new ActualRailoRunner(jettyServer, railoServletName)
    
    runner.withRailo { case context @ RailoContext(config, _, _) =>
      try code(context)
      catch {
        case pageException: PageException =>
          sys.error(Compiler.getFriendlyError(pageException, config))
      }
    } 
  }
}